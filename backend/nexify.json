{
  "service": "decompiler",
  "provider": {
    "name": "aws",
    "runtime": "python3.10",
    "region": "ap-northeast-2",
    "profile": "decompiler-25spring-door-quiz",
    "logRetentionInDays": 14,
    "architecture": "x86_64",
    "memorySize": 128,
    "timeout": 10,
    "stage": "prod",
    "environment": {
      "FLAG1": "${env:FLAG1}",
      "FLAG2": "${env:FLAG2}",
      "DOOR_PASSWORD": "${env:DOOR_PASSWORD}"
    },
    "iamRoleStatements": [
      { "Effect": "Allow", "Action": ["s3:*"], "Resource": "*" }
    ]
  },
  "package": {
    "include": ["main.py"],
    "exclude": [".venv/**", ".git/**", ".gitignore"],
    "pipCmdExtraArgs": []
  },
  "resources": {
    "Resources": {
      "APIGatewayRestAPI": {
        "Type": "AWS::ApiGateway::RestApi",
        "Properties": {
          "Name": "decompilver-25spring-door-quiz-API",
          "Policy": "",
          "Description": "API for decompiler-25spring-door-quiz",
          "EndpointConfiguration": {
            "Types": ["REGIONAL"]
          }
        }
      },
      "ApiGatewayCustomDomain": {
        "Type": "AWS::ApiGateway::DomainName",
        "Properties": {
          "DomainName": "api.decompiler-25spring-door-quiz.junah.dev",
          "RegionalCertificateArn": "arn:aws:acm:ap-northeast-2:785084236200:certificate/83e3615c-3906-40a3-8de3-6f9d2f475eb5",
          "EndpointConfiguration": {
            "Types": ["REGIONAL"]
          }
        }
      },
      "ApiGatewayMapping": {
        "Type": "AWS::ApiGateway::BasePathMapping",
        "DependsOn": ["ApiGatewayCustomDomain", "APIGatewayRestAPI"],
        "Properties": {
          "RestApiId": {
            "Ref": "APIGatewayRestAPI"
          },
          "DomainName": {
            "Ref": "ApiGatewayCustomDomain"
          },
          "Stage": "prod"
        }
      },
      "ApiGatewayResourceSolveOptions": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "HttpMethod": "OPTIONS",
          "ResourceId": {
            "Ref": "ApiGatewayResourceSolve"
          },
          "RestApiId": {
            "Ref": "APIGatewayRestAPI"
          },
          "AuthorizationType": "NONE",
          "Integration": {
            "Type": "MOCK",
            "IntegrationResponses": [
              {
                "StatusCode": 200,
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'https://decompiler-25spring-door-quiz.junah.dev'",
                  "method.response.header.Access-Control-Allow-Methods": "'*'",
                  "method.response.header.Access-Control-Allow-Headers": "'*'"
                },
                "ResponseTemplates": {
                  "application/json": ""
                }
              }
            ],
            "RequestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            }
          },
          "MethodResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": true,
                "method.response.header.Access-Control-Allow-Methods": true,
                "method.response.header.Access-Control-Allow-Headers": true
              }
            }
          ]
        }
      },
      "ReactAppS3Bucket": {
        "Type": "AWS::S3::Bucket",
        "Properties": {
          "BucketName": "decompiler-25spring-door-quiz.junah.dev",
          "VersioningConfiguration": {
            "Status": "Suspended"
          },
          "PublicAccessBlockConfiguration": {
            "BlockPublicAcls": false,
            "BlockPublicPolicy": false,
            "IgnorePublicAcls": false,
            "RestrictPublicBuckets": false
          },
          "WebsiteConfiguration": {
            "IndexDocument": "index.html",
            "ErrorDocument": "index.html"
          }
        }
      },
      "ReactAppS3BucketPolicy": {
        "Type": "AWS::S3::BucketPolicy",
        "Properties": {
          "Bucket": {
            "Ref": "ReactAppS3Bucket"
          },
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "PublicReadGetObject",
                "Effect": "Allow",
                "Principal": "*",
                "Action": "s3:GetObject",
                "Resource": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "ReactAppS3Bucket"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            ]
          }
        }
      },
      "ReactAppCloudFrontDistribution": {
        "Type": "AWS::CloudFront::Distribution",
        "Properties": {
          "DistributionConfig": {
            "Enabled": true,
            "Origins": [
              {
                "DomainName": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "ReactAppS3Bucket"
                      },
                      ".s3-website.",
                      {
                        "Ref": "AWS::Region"
                      },
                      ".amazonaws.com"
                    ]
                  ]
                },
                "Id": "ReactAppOrigin",
                "CustomOriginConfig": {
                  "HTTPPort": 80,
                  "HTTPSPort": 443,
                  "OriginProtocolPolicy": "http-only",
                  "OriginSSLProtocols": ["TLSv1", "TLSv1.1", "TLSv1.2"]
                }
              }
            ],
            "DefaultCacheBehavior": {
              "TargetOriginId": "ReactAppOrigin",
              "ViewerProtocolPolicy": "redirect-to-https",
              "AllowedMethods": ["GET", "HEAD", "OPTIONS"],
              "CachedMethods": ["GET", "HEAD"],
              "ForwardedValues": {
                "QueryString": false,
                "Cookies": {
                  "Forward": "none"
                }
              }
            },
            "DefaultRootObject": "index.html",
            "Aliases": ["decompiler-25spring-door-quiz.junah.dev"],
            "ViewerCertificate": {
              "AcmCertificateArn": "arn:aws:acm:us-east-1:785084236200:certificate/0ec7605d-de7f-4c36-b357-bea66b814de4",
              "SslSupportMethod": "sni-only",
              "MinimumProtocolVersion": "TLSv1.2_2018"
            },
            "HttpVersion": "http2and3",
            "PriceClass": "PriceClass_200"
          }
        }
      },
      "GitHubOIDCProvider": {
        "Type": "AWS::IAM::OIDCProvider",
        "Properties": {
          "Url": "https://token.actions.githubusercontent.com",
          "ClientIdList": ["sts.amazonaws.com"],
          "ThumbprintList": [
            "6938fd4d98bab03faadb97b34396831e3780aea1",
            "1c58a3a8518e8759bf075b76b750d4f2df264fcd"
          ]
        }
      },
      "GithubActionsRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": "GithubActionsRole",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": "sts:AssumeRoleWithWebIdentity",
                "Principal": {
                  "Federated": [
                    {
                      "Fn::GetAtt": ["GitHubOIDCProvider", "Arn"]
                    }
                  ]
                },
                "Condition": {
                  "StringLike": {
                    "token.actions.githubusercontent.com:sub": "repo:junah201/decompiler-25spring-door-quiz:*"
                  }
                }
              }
            ]
          },
          "Policies": [
            {
              "PolicyName": "GithubActionsPolicy",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "s3:GetObject",
                      "s3:PutObject",
                      "s3:DeleteObject",
                      "s3:ListBucket"
                    ],
                    "Resource": [
                      {
                        "Fn::Sub": "arn:aws:s3:::${ReactAppS3Bucket}"
                      },
                      {
                        "Fn::Sub": "arn:aws:s3:::${ReactAppS3Bucket}/*"
                      }
                    ]
                  },
                  {
                    "Effect": "Allow",
                    "Action": ["cloudfront:CreateInvalidation"],
                    "Resource": [
                      {
                        "Fn::Sub": "arn:aws:cloudfront::${AWS::AccountId}:distribution/${ReactAppCloudFrontDistribution}"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      }
    }
  }
}
